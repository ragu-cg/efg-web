import Head from "next/head";
import { Container, createStyles, ThemeIcon, Text, SimpleGrid, Box, Stack } from '@mantine/core';
import { Banner } from "../components/Banner/Banner";
import { IconSun, IconPhone, IconMapPin, IconAt } from '@tabler/icons';

type ContactIconVariant = 'white' | 'gradient';

interface ContactIconStyles {
  variant: ContactIconVariant;
}

const useStyles = createStyles((theme, { variant }: ContactIconStyles) => ({
  wrapper: {
    display: 'flex',
    alignItems: 'center',
    color: theme.white,
  },

  icon: {
    marginRight: theme.spacing.md,
    backgroundImage:
      variant === 'gradient'
        ? `linear-gradient(135deg, ${theme.colors[theme.primaryColor][4]} 0%, ${
            theme.colors[theme.primaryColor][6]
          } 100%)`
        : 'none',
    backgroundColor: 'transparent',
  },

  title: {
    color: variant === 'gradient' ? theme.colors.gray[6] : theme.colors[theme.primaryColor][0],
  },

  description: {
    color: variant === 'gradient' ? theme.black : theme.white,
  },
}));

interface ContactIconProps extends Omit<React.ComponentPropsWithoutRef<'div'>, 'title'> {
  icon: React.FC<any>;
  title: React.ReactNode;
  description: React.ReactNode;
  variant?: ContactIconVariant;
}

function ContactIcon({
  icon: Icon,
  title,
  description,
  variant = 'gradient',
  className,
  ...others
}: ContactIconProps) {
  const { classes, cx } = useStyles({ variant });
  return (
    <div className={cx(classes.wrapper, className)} {...others}>
      {variant === 'gradient' ? (
        <ThemeIcon size={40} radius="md" className={classes.icon}>
          <Icon size="1.5rem" />
        </ThemeIcon>
      ) : (
        <Box mr="md">
          <Icon size="1.5rem" />
        </Box>
      )}

      <div>
        <Text size="xs" className={classes.title}>
          {title}
        </Text>
        <Text className={classes.description}>{description}</Text>
      </div>
    </div>
  );
}

interface ContactIconsListProps {
  data?: ContactIconProps[];
  variant?: ContactIconVariant;
}

const MOCKDATA = [
  { title: 'Email', description: 'admin@efg.com.sg', icon: IconAt },
  { title: 'Phone', description: '+65 6334 7872', icon: IconPhone },
  { title: 'Address', description: 'No: 3, Soon Lee Street, 01-16, Pioneer Junction, Singapore - 627606', icon: IconMapPin },
  { title: 'Working hours', description: '8 a.m. â€“ 6 p.m.', icon: IconSun },
];

export function ContactIconsList({ data = MOCKDATA, variant }: ContactIconsListProps) {
  const items = data.map((item, index) => <ContactIcon key={index} variant={variant} {...item} />);
  return <Stack>{items}</Stack>;
}

export default function Contact() {
  return (
    <>
    <Head>
        <title>Contact Us | EFG</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Banner title="Contact us" />
    <Container size="md" mt={120}  sx={() => ({
        marginTop: '120px',

        '@media (max-width: 40em)': {
          marginTop: '40px',
        },
      })}>
    <SimpleGrid cols={2} breakpoints={[{ maxWidth: 755, cols: 1 }]}>
      <Box
        sx={(theme) => ({
          padding: theme.spacing.xl,
          borderRadius: theme.radius.md,
          backgroundColor: theme.white,
        })}
      >
        <ContactIconsList />
      </Box>

      <Box
        sx={(theme) => ({
          padding: theme.spacing.xl,
          borderRadius: theme.radius.md,
          backgroundImage: `linear-gradient(135deg, ${theme.colors[theme.primaryColor][6]} 0%, ${
            theme.colors[theme.primaryColor][4]
          } 100%)`,
        })}
      >
        <Text color={"white"} mb={10}>
        We're happy to hear from you! If you have any questions, comments, or suggestions, or need assistance on course bookings, please feel free to reach out to us.
        </Text>

<Text color={"white"} mb={10}>
You can contact us via email or phone.
</Text>

<Text color={"white"}>
Thank you for your interest in our website. We look forward to hearing from you.
        </Text>
      </Box>
    </SimpleGrid>
    </Container>
    </>
  );
}